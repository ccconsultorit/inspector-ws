/*
 * This file is generated by jOOQ.
 */
package com.inspector.ws.db.schema.tables;


import com.inspector.ws.db.schema.Indexes;
import com.inspector.ws.db.schema.Keys;
import com.inspector.ws.db.schema.Public;
import com.inspector.ws.db.schema.tables.records.TabSolCalidadRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TabSolCalidad extends TableImpl<TabSolCalidadRecord> {

    private static final long serialVersionUID = -651976080;

    /**
     * The reference instance of <code>public.tab_sol_calidad</code>
     */
    public static final TabSolCalidad TAB_SOL_CALIDAD = new TabSolCalidad();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TabSolCalidadRecord> getRecordType() {
        return TabSolCalidadRecord.class;
    }

    /**
     * The column <code>public.tab_sol_calidad.id_sol_calidad</code>.
     */
    public final TableField<TabSolCalidadRecord, Long> ID_SOL_CALIDAD = createField(DSL.name("id_sol_calidad"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tab_sol_calidad.nom_marca</code>.
     */
    public final TableField<TabSolCalidadRecord, String> NOM_MARCA = createField(DSL.name("nom_marca"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.nro_qs</code>.
     */
    public final TableField<TabSolCalidadRecord, String> NRO_QS = createField(DSL.name("nro_qs"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.guia_transporte</code>.
     */
    public final TableField<TabSolCalidadRecord, String> GUIA_TRANSPORTE = createField(DSL.name("guia_transporte"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.guia_remision</code>.
     */
    public final TableField<TabSolCalidadRecord, String> GUIA_REMISION = createField(DSL.name("guia_remision"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.defectuoso</code>.
     */
    public final TableField<TabSolCalidadRecord, Integer> DEFECTUOSO = createField(DSL.name("defectuoso"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.tarjeta_embarque</code>.
     */
    public final TableField<TabSolCalidadRecord, String> TARJETA_EMBARQUE = createField(DSL.name("tarjeta_embarque"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.total_cluster</code>.
     */
    public final TableField<TabSolCalidadRecord, Integer> TOTAL_CLUSTER = createField(DSL.name("total_cluster"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.total_defecto</code>.
     */
    public final TableField<TabSolCalidadRecord, Integer> TOTAL_DEFECTO = createField(DSL.name("total_defecto"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.calidad</code>.
     */
    public final TableField<TabSolCalidadRecord, Float> CALIDAD = createField(DSL.name("calidad"), org.jooq.impl.SQLDataType.REAL.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.REAL)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.calibracion</code>.
     */
    public final TableField<TabSolCalidadRecord, Float> CALIBRACION = createField(DSL.name("calibracion"), org.jooq.impl.SQLDataType.REAL.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.REAL)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.largo_dedo</code>.
     */
    public final TableField<TabSolCalidadRecord, Float> LARGO_DEDO = createField(DSL.name("largo_dedo"), org.jooq.impl.SQLDataType.REAL.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.REAL)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.total_peso</code>.
     */
    public final TableField<TabSolCalidadRecord, Float> TOTAL_PESO = createField(DSL.name("total_peso"), org.jooq.impl.SQLDataType.REAL.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.REAL)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.peso_promedio</code>.
     */
    public final TableField<TabSolCalidadRecord, Float> PESO_PROMEDIO = createField(DSL.name("peso_promedio"), org.jooq.impl.SQLDataType.REAL.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.REAL)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.mayor_defecto_seleccion</code>.
     */
    public final TableField<TabSolCalidadRecord, String> MAYOR_DEFECTO_SELECCION = createField(DSL.name("mayor_defecto_seleccion"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.mayor_defecto_empaque</code>.
     */
    public final TableField<TabSolCalidadRecord, String> MAYOR_DEFECTO_EMPAQUE = createField(DSL.name("mayor_defecto_empaque"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_calidad.estado</code>.
     */
    public final TableField<TabSolCalidadRecord, String> ESTADO = createField(DSL.name("estado"), org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>public.tab_sol_calidad.fecha_ingreso</code>.
     */
    public final TableField<TabSolCalidadRecord, LocalDateTime> FECHA_INGRESO = createField(DSL.name("fecha_ingreso"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_calidad.fecha_modifica</code>.
     */
    public final TableField<TabSolCalidadRecord, LocalDateTime> FECHA_MODIFICA = createField(DSL.name("fecha_modifica"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_calidad.usuario_ingreso</code>.
     */
    public final TableField<TabSolCalidadRecord, Integer> USUARIO_INGRESO = createField(DSL.name("usuario_ingreso"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_calidad.usuario_modifica</code>.
     */
    public final TableField<TabSolCalidadRecord, Integer> USUARIO_MODIFICA = createField(DSL.name("usuario_modifica"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_calidad.id_solicitud</code>.
     */
    public final TableField<TabSolCalidadRecord, Long> ID_SOLICITUD = createField(DSL.name("id_solicitud"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.tab_sol_calidad.id_sol_productor</code>.
     */
    public final TableField<TabSolCalidadRecord, Long> ID_SOL_PRODUCTOR = createField(DSL.name("id_sol_productor"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.tab_sol_calidad.total_embarcado</code>.
     */
    public final TableField<TabSolCalidadRecord, Integer> TOTAL_EMBARCADO = createField(DSL.name("total_embarcado"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.tab_sol_calidad</code> table reference
     */
    public TabSolCalidad() {
        this(DSL.name("tab_sol_calidad"), null);
    }

    /**
     * Create an aliased <code>public.tab_sol_calidad</code> table reference
     */
    public TabSolCalidad(String alias) {
        this(DSL.name(alias), TAB_SOL_CALIDAD);
    }

    /**
     * Create an aliased <code>public.tab_sol_calidad</code> table reference
     */
    public TabSolCalidad(Name alias) {
        this(alias, TAB_SOL_CALIDAD);
    }

    private TabSolCalidad(Name alias, Table<TabSolCalidadRecord> aliased) {
        this(alias, aliased, null);
    }

    private TabSolCalidad(Name alias, Table<TabSolCalidadRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TabSolCalidad(Table<O> child, ForeignKey<O, TabSolCalidadRecord> key) {
        super(child, key, TAB_SOL_CALIDAD);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TAB_SOL_CALIDAD_PKEY);
    }

    @Override
    public UniqueKey<TabSolCalidadRecord> getPrimaryKey() {
        return Keys.TAB_SOL_CALIDAD_PKEY;
    }

    @Override
    public List<UniqueKey<TabSolCalidadRecord>> getKeys() {
        return Arrays.<UniqueKey<TabSolCalidadRecord>>asList(Keys.TAB_SOL_CALIDAD_PKEY);
    }

    @Override
    public List<ForeignKey<TabSolCalidadRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TabSolCalidadRecord, ?>>asList(Keys.TAB_SOL_CALIDAD__TAB_SOL_CALIDAD_USUARIO_INGRESO_FKEY, Keys.TAB_SOL_CALIDAD__TAB_SOL_CALIDAD_USUARIO_MODIFICA_FKEY, Keys.TAB_SOL_CALIDAD__TAB_SOL_CALIDAD_ID_SOLICITUD_FKEY);
    }

    public TabUsuario tabSolCalidad_TabSolCalidadUsuarioIngresoFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_CALIDAD__TAB_SOL_CALIDAD_USUARIO_INGRESO_FKEY);
    }

    public TabUsuario tabSolCalidad_TabSolCalidadUsuarioModificaFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_CALIDAD__TAB_SOL_CALIDAD_USUARIO_MODIFICA_FKEY);
    }

    public TabSolicitud tabSolicitud() {
        return new TabSolicitud(this, Keys.TAB_SOL_CALIDAD__TAB_SOL_CALIDAD_ID_SOLICITUD_FKEY);
    }

    @Override
    public TabSolCalidad as(String alias) {
        return new TabSolCalidad(DSL.name(alias), this);
    }

    @Override
    public TabSolCalidad as(Name alias) {
        return new TabSolCalidad(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolCalidad rename(String name) {
        return new TabSolCalidad(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolCalidad rename(Name name) {
        return new TabSolCalidad(name, null);
    }
}
