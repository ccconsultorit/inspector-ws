/*
 * This file is generated by jOOQ.
 */
package com.inspector.ws.db.schema.tables;


import com.inspector.ws.db.schema.Indexes;
import com.inspector.ws.db.schema.Keys;
import com.inspector.ws.db.schema.Public;
import com.inspector.ws.db.schema.tables.records.TabSolControlPesoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TabSolControlPeso extends TableImpl<TabSolControlPesoRecord> {

    private static final long serialVersionUID = 1679030317;

    /**
     * The reference instance of <code>public.tab_sol_control_peso</code>
     */
    public static final TabSolControlPeso TAB_SOL_CONTROL_PESO = new TabSolControlPeso();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TabSolControlPesoRecord> getRecordType() {
        return TabSolControlPesoRecord.class;
    }

    /**
     * The column <code>public.tab_sol_control_peso.id_sol_control_peso</code>.
     */
    public final TableField<TabSolControlPesoRecord, Long> ID_SOL_CONTROL_PESO = createField(DSL.name("id_sol_control_peso"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tab_sol_control_peso.balanza_repesa</code>.
     */
    public final TableField<TabSolControlPesoRecord, String> BALANZA_REPESA = createField(DSL.name("balanza_repesa"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_control_peso.condicion_balanza</code>.
     */
    public final TableField<TabSolControlPesoRecord, String> CONDICION_BALANZA = createField(DSL.name("condicion_balanza"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_control_peso.tipo_balanza</code>.
     */
    public final TableField<TabSolControlPesoRecord, String> TIPO_BALANZA = createField(DSL.name("tipo_balanza"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_control_peso.peso_neto_fruta</code>.
     */
    public final TableField<TabSolControlPesoRecord, Float> PESO_NETO_FRUTA = createField(DSL.name("peso_neto_fruta"), org.jooq.impl.SQLDataType.REAL.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.REAL)), this, "");

    /**
     * The column <code>public.tab_sol_control_peso.observacion</code>.
     */
    public final TableField<TabSolControlPesoRecord, String> OBSERVACION = createField(DSL.name("observacion"), org.jooq.impl.SQLDataType.VARCHAR(1000).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_control_peso.estado</code>.
     */
    public final TableField<TabSolControlPesoRecord, String> ESTADO = createField(DSL.name("estado"), org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>public.tab_sol_control_peso.fecha_ingreso</code>.
     */
    public final TableField<TabSolControlPesoRecord, LocalDateTime> FECHA_INGRESO = createField(DSL.name("fecha_ingreso"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_control_peso.fecha_modifica</code>.
     */
    public final TableField<TabSolControlPesoRecord, LocalDateTime> FECHA_MODIFICA = createField(DSL.name("fecha_modifica"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_control_peso.usuario_ingreso</code>.
     */
    public final TableField<TabSolControlPesoRecord, Integer> USUARIO_INGRESO = createField(DSL.name("usuario_ingreso"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_control_peso.usuario_modifica</code>.
     */
    public final TableField<TabSolControlPesoRecord, Integer> USUARIO_MODIFICA = createField(DSL.name("usuario_modifica"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_control_peso.id_solicitud</code>.
     */
    public final TableField<TabSolControlPesoRecord, Long> ID_SOLICITUD = createField(DSL.name("id_solicitud"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.tab_sol_control_peso.id_sol_productor</code>.
     */
    public final TableField<TabSolControlPesoRecord, Long> ID_SOL_PRODUCTOR = createField(DSL.name("id_sol_productor"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.tab_sol_control_peso</code> table reference
     */
    public TabSolControlPeso() {
        this(DSL.name("tab_sol_control_peso"), null);
    }

    /**
     * Create an aliased <code>public.tab_sol_control_peso</code> table reference
     */
    public TabSolControlPeso(String alias) {
        this(DSL.name(alias), TAB_SOL_CONTROL_PESO);
    }

    /**
     * Create an aliased <code>public.tab_sol_control_peso</code> table reference
     */
    public TabSolControlPeso(Name alias) {
        this(alias, TAB_SOL_CONTROL_PESO);
    }

    private TabSolControlPeso(Name alias, Table<TabSolControlPesoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TabSolControlPeso(Name alias, Table<TabSolControlPesoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TabSolControlPeso(Table<O> child, ForeignKey<O, TabSolControlPesoRecord> key) {
        super(child, key, TAB_SOL_CONTROL_PESO);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TAB_SOL_CONTROL_PESO_PKEY);
    }

    @Override
    public UniqueKey<TabSolControlPesoRecord> getPrimaryKey() {
        return Keys.TAB_SOL_CONTROL_PESO_PKEY;
    }

    @Override
    public List<UniqueKey<TabSolControlPesoRecord>> getKeys() {
        return Arrays.<UniqueKey<TabSolControlPesoRecord>>asList(Keys.TAB_SOL_CONTROL_PESO_PKEY);
    }

    @Override
    public List<ForeignKey<TabSolControlPesoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TabSolControlPesoRecord, ?>>asList(Keys.TAB_SOL_CONTROL_PESO__TAB_SOL_CONTROL_PESO_USUARIO_INGRESO_FKEY, Keys.TAB_SOL_CONTROL_PESO__TAB_SOL_CONTROL_PESO_USUARIO_MODIFICA_FKEY);
    }

    public TabUsuario tabSolControlPeso_TabSolControlPesoUsuarioIngresoFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_CONTROL_PESO__TAB_SOL_CONTROL_PESO_USUARIO_INGRESO_FKEY);
    }

    public TabUsuario tabSolControlPeso_TabSolControlPesoUsuarioModificaFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_CONTROL_PESO__TAB_SOL_CONTROL_PESO_USUARIO_MODIFICA_FKEY);
    }

    @Override
    public TabSolControlPeso as(String alias) {
        return new TabSolControlPeso(DSL.name(alias), this);
    }

    @Override
    public TabSolControlPeso as(Name alias) {
        return new TabSolControlPeso(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolControlPeso rename(String name) {
        return new TabSolControlPeso(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolControlPeso rename(Name name) {
        return new TabSolControlPeso(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, String, String, String, Float, String, String, LocalDateTime, LocalDateTime, Integer, Integer, Long, Long> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
