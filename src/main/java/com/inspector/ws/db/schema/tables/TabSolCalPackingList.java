/*
 * This file is generated by jOOQ.
 */
package com.inspector.ws.db.schema.tables;


import com.inspector.ws.db.schema.Indexes;
import com.inspector.ws.db.schema.Keys;
import com.inspector.ws.db.schema.Public;
import com.inspector.ws.db.schema.tables.records.TabSolCalPackingListRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TabSolCalPackingList extends TableImpl<TabSolCalPackingListRecord> {

    private static final long serialVersionUID = 1872774937;

    /**
     * The reference instance of <code>public.tab_sol_cal_packing_list</code>
     */
    public static final TabSolCalPackingList TAB_SOL_CAL_PACKING_LIST = new TabSolCalPackingList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TabSolCalPackingListRecord> getRecordType() {
        return TabSolCalPackingListRecord.class;
    }

    /**
     * The column <code>public.tab_sol_cal_packing_list.id_sol_cal_packing_list</code>.
     */
    public final TableField<TabSolCalPackingListRecord, Long> ID_SOL_CAL_PACKING_LIST = createField(DSL.name("id_sol_cal_packing_list"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tab_sol_cal_packing_list.numeracion</code>.
     */
    public final TableField<TabSolCalPackingListRecord, Integer> NUMERACION = createField(DSL.name("numeracion"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tab_sol_cal_packing_list.sticker</code>.
     */
    public final TableField<TabSolCalPackingListRecord, String> STICKER = createField(DSL.name("sticker"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_cal_packing_list.estado</code>.
     */
    public final TableField<TabSolCalPackingListRecord, String> ESTADO = createField(DSL.name("estado"), org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>public.tab_sol_cal_packing_list.fecha_ingreso</code>.
     */
    public final TableField<TabSolCalPackingListRecord, LocalDateTime> FECHA_INGRESO = createField(DSL.name("fecha_ingreso"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_cal_packing_list.fecha_modifica</code>.
     */
    public final TableField<TabSolCalPackingListRecord, LocalDateTime> FECHA_MODIFICA = createField(DSL.name("fecha_modifica"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_cal_packing_list.usuario_ingreso</code>.
     */
    public final TableField<TabSolCalPackingListRecord, Integer> USUARIO_INGRESO = createField(DSL.name("usuario_ingreso"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_cal_packing_list.usuario_modifica</code>.
     */
    public final TableField<TabSolCalPackingListRecord, Integer> USUARIO_MODIFICA = createField(DSL.name("usuario_modifica"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_cal_packing_list.id_sol_calidad</code>.
     */
    public final TableField<TabSolCalPackingListRecord, Long> ID_SOL_CALIDAD = createField(DSL.name("id_sol_calidad"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.tab_sol_cal_packing_list</code> table reference
     */
    public TabSolCalPackingList() {
        this(DSL.name("tab_sol_cal_packing_list"), null);
    }

    /**
     * Create an aliased <code>public.tab_sol_cal_packing_list</code> table reference
     */
    public TabSolCalPackingList(String alias) {
        this(DSL.name(alias), TAB_SOL_CAL_PACKING_LIST);
    }

    /**
     * Create an aliased <code>public.tab_sol_cal_packing_list</code> table reference
     */
    public TabSolCalPackingList(Name alias) {
        this(alias, TAB_SOL_CAL_PACKING_LIST);
    }

    private TabSolCalPackingList(Name alias, Table<TabSolCalPackingListRecord> aliased) {
        this(alias, aliased, null);
    }

    private TabSolCalPackingList(Name alias, Table<TabSolCalPackingListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TabSolCalPackingList(Table<O> child, ForeignKey<O, TabSolCalPackingListRecord> key) {
        super(child, key, TAB_SOL_CAL_PACKING_LIST);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TAB_SOL_CAL_PACKING_LIST_PKEY);
    }

    @Override
    public UniqueKey<TabSolCalPackingListRecord> getPrimaryKey() {
        return Keys.TAB_SOL_CAL_PACKING_LIST_PKEY;
    }

    @Override
    public List<UniqueKey<TabSolCalPackingListRecord>> getKeys() {
        return Arrays.<UniqueKey<TabSolCalPackingListRecord>>asList(Keys.TAB_SOL_CAL_PACKING_LIST_PKEY);
    }

    @Override
    public List<ForeignKey<TabSolCalPackingListRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TabSolCalPackingListRecord, ?>>asList(Keys.TAB_SOL_CAL_PACKING_LIST__TAB_SOL_CAL_PACKING_LIST_USUARIO_INGRESO_FKEY, Keys.TAB_SOL_CAL_PACKING_LIST__TAB_SOL_CAL_PACKING_LIST_USUARIO_MODIFICA_FKEY, Keys.TAB_SOL_CAL_PACKING_LIST__TAB_SOL_CAL_PACKING_LIST_ID_SOL_CALIDAD_FKEY);
    }

    public TabUsuario tabSolCalPackingList_TabSolCalPackingListUsuarioIngresoFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_CAL_PACKING_LIST__TAB_SOL_CAL_PACKING_LIST_USUARIO_INGRESO_FKEY);
    }

    public TabUsuario tabSolCalPackingList_TabSolCalPackingListUsuarioModificaFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_CAL_PACKING_LIST__TAB_SOL_CAL_PACKING_LIST_USUARIO_MODIFICA_FKEY);
    }

    public TabSolCalidad tabSolCalidad() {
        return new TabSolCalidad(this, Keys.TAB_SOL_CAL_PACKING_LIST__TAB_SOL_CAL_PACKING_LIST_ID_SOL_CALIDAD_FKEY);
    }

    @Override
    public TabSolCalPackingList as(String alias) {
        return new TabSolCalPackingList(DSL.name(alias), this);
    }

    @Override
    public TabSolCalPackingList as(Name alias) {
        return new TabSolCalPackingList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolCalPackingList rename(String name) {
        return new TabSolCalPackingList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolCalPackingList rename(Name name) {
        return new TabSolCalPackingList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Integer, String, String, LocalDateTime, LocalDateTime, Integer, Integer, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
