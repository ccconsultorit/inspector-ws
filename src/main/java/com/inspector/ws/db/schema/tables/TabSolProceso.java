/*
 * This file is generated by jOOQ.
 */
package com.inspector.ws.db.schema.tables;


import com.inspector.ws.db.schema.Indexes;
import com.inspector.ws.db.schema.Keys;
import com.inspector.ws.db.schema.Public;
import com.inspector.ws.db.schema.tables.records.TabSolProcesoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TabSolProceso extends TableImpl<TabSolProcesoRecord> {

    private static final long serialVersionUID = 1150573242;

    /**
     * The reference instance of <code>public.tab_sol_proceso</code>
     */
    public static final TabSolProceso TAB_SOL_PROCESO = new TabSolProceso();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TabSolProcesoRecord> getRecordType() {
        return TabSolProcesoRecord.class;
    }

    /**
     * The column <code>public.tab_sol_proceso.id_sol_proceso</code>.
     */
    public final TableField<TabSolProcesoRecord, Long> ID_SOL_PROCESO = createField(DSL.name("id_sol_proceso"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tab_sol_proceso.cajas_procesadas_despachadas</code>.
     */
    public final TableField<TabSolProcesoRecord, Integer> CAJAS_PROCESADAS_DESPACHADAS = createField(DSL.name("cajas_procesadas_despachadas"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.tipo_fruta</code>.
     */
    public final TableField<TabSolProcesoRecord, String> TIPO_FRUTA = createField(DSL.name("tipo_fruta"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.tipo_funda_multiple</code>.
     */
    public final TableField<TabSolProcesoRecord, String> TIPO_FUNDA_MULTIPLE = createField(DSL.name("tipo_funda_multiple"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.densidad_funda</code>.
     */
    public final TableField<TabSolProcesoRecord, String> DENSIDAD_FUNDA = createField(DSL.name("densidad_funda"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.tipo_caja_multiple</code>.
     */
    public final TableField<TabSolProcesoRecord, String> TIPO_CAJA_MULTIPLE = createField(DSL.name("tipo_caja_multiple"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.tipo_presentacion_multiple</code>.
     */
    public final TableField<TabSolProcesoRecord, String> TIPO_PRESENTACION_MULTIPLE = createField(DSL.name("tipo_presentacion_multiple"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.tipo_estiba</code>.
     */
    public final TableField<TabSolProcesoRecord, String> TIPO_ESTIBA = createField(DSL.name("tipo_estiba"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.tiempo_descarga_fumigacion</code>.
     */
    public final TableField<TabSolProcesoRecord, String> TIEMPO_DESCARGA_FUMIGACION = createField(DSL.name("tiempo_descarga_fumigacion"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.tipo_cantulina</code>.
     */
    public final TableField<TabSolProcesoRecord, String> TIPO_CANTULINA = createField(DSL.name("tipo_cantulina"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_proceso.estado</code>.
     */
    public final TableField<TabSolProcesoRecord, String> ESTADO = createField(DSL.name("estado"), org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>public.tab_sol_proceso.fecha_ingreso</code>.
     */
    public final TableField<TabSolProcesoRecord, LocalDateTime> FECHA_INGRESO = createField(DSL.name("fecha_ingreso"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_proceso.fecha_modifica</code>.
     */
    public final TableField<TabSolProcesoRecord, LocalDateTime> FECHA_MODIFICA = createField(DSL.name("fecha_modifica"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_proceso.usuario_ingreso</code>.
     */
    public final TableField<TabSolProcesoRecord, Integer> USUARIO_INGRESO = createField(DSL.name("usuario_ingreso"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_proceso.usuario_modifica</code>.
     */
    public final TableField<TabSolProcesoRecord, Integer> USUARIO_MODIFICA = createField(DSL.name("usuario_modifica"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_proceso.id_solicitud</code>.
     */
    public final TableField<TabSolProcesoRecord, Long> ID_SOLICITUD = createField(DSL.name("id_solicitud"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.tab_sol_proceso.id_sol_productor</code>.
     */
    public final TableField<TabSolProcesoRecord, Long> ID_SOL_PRODUCTOR = createField(DSL.name("id_sol_productor"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.tab_sol_proceso</code> table reference
     */
    public TabSolProceso() {
        this(DSL.name("tab_sol_proceso"), null);
    }

    /**
     * Create an aliased <code>public.tab_sol_proceso</code> table reference
     */
    public TabSolProceso(String alias) {
        this(DSL.name(alias), TAB_SOL_PROCESO);
    }

    /**
     * Create an aliased <code>public.tab_sol_proceso</code> table reference
     */
    public TabSolProceso(Name alias) {
        this(alias, TAB_SOL_PROCESO);
    }

    private TabSolProceso(Name alias, Table<TabSolProcesoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TabSolProceso(Name alias, Table<TabSolProcesoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TabSolProceso(Table<O> child, ForeignKey<O, TabSolProcesoRecord> key) {
        super(child, key, TAB_SOL_PROCESO);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TAB_SOL_PROCESO_PKEY);
    }

    @Override
    public UniqueKey<TabSolProcesoRecord> getPrimaryKey() {
        return Keys.TAB_SOL_PROCESO_PKEY;
    }

    @Override
    public List<UniqueKey<TabSolProcesoRecord>> getKeys() {
        return Arrays.<UniqueKey<TabSolProcesoRecord>>asList(Keys.TAB_SOL_PROCESO_PKEY);
    }

    @Override
    public List<ForeignKey<TabSolProcesoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TabSolProcesoRecord, ?>>asList(Keys.TAB_SOL_PROCESO__TAB_SOL_PROCESO_USUARIO_INGRESO_FKEY, Keys.TAB_SOL_PROCESO__TAB_SOL_PROCESO_USUARIO_MODIFICA_FKEY);
    }

    public TabUsuario tabSolProceso_TabSolProcesoUsuarioIngresoFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_PROCESO__TAB_SOL_PROCESO_USUARIO_INGRESO_FKEY);
    }

    public TabUsuario tabSolProceso_TabSolProcesoUsuarioModificaFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_PROCESO__TAB_SOL_PROCESO_USUARIO_MODIFICA_FKEY);
    }

    @Override
    public TabSolProceso as(String alias) {
        return new TabSolProceso(DSL.name(alias), this);
    }

    @Override
    public TabSolProceso as(Name alias) {
        return new TabSolProceso(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolProceso rename(String name) {
        return new TabSolProceso(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolProceso rename(Name name) {
        return new TabSolProceso(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, Integer, String, String, String, String, String, String, String, String, String, LocalDateTime, LocalDateTime, Integer, Integer, Long, Long> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
