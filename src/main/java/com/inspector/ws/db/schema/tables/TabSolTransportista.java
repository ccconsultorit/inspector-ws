/*
 * This file is generated by jOOQ.
 */
package com.inspector.ws.db.schema.tables;


import com.inspector.ws.db.schema.Indexes;
import com.inspector.ws.db.schema.Keys;
import com.inspector.ws.db.schema.Public;
import com.inspector.ws.db.schema.tables.records.TabSolTransportistaRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TabSolTransportista extends TableImpl<TabSolTransportistaRecord> {

    private static final long serialVersionUID = 336443702;

    /**
     * The reference instance of <code>public.tab_sol_transportista</code>
     */
    public static final TabSolTransportista TAB_SOL_TRANSPORTISTA = new TabSolTransportista();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TabSolTransportistaRecord> getRecordType() {
        return TabSolTransportistaRecord.class;
    }

    /**
     * The column <code>public.tab_sol_transportista.id_sol_transportista</code>.
     */
    public final TableField<TabSolTransportistaRecord, Long> ID_SOL_TRANSPORTISTA = createField(DSL.name("id_sol_transportista"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tab_sol_transportista.compania</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> COMPANIA = createField(DSL.name("compania"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_transportista.chofer</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> CHOFER = createField(DSL.name("chofer"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_transportista.cedula</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> CEDULA = createField(DSL.name("cedula"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_transportista.celular</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> CELULAR = createField(DSL.name("celular"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_transportista.placa</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> PLACA = createField(DSL.name("placa"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_transportista.color_cabezal</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> COLOR_CABEZAL = createField(DSL.name("color_cabezal"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_transportista.marca_cabezal</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> MARCA_CABEZAL = createField(DSL.name("marca_cabezal"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_transportista.observacion</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> OBSERVACION = createField(DSL.name("observacion"), org.jooq.impl.SQLDataType.VARCHAR(1000).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tab_sol_transportista.estado</code>.
     */
    public final TableField<TabSolTransportistaRecord, String> ESTADO = createField(DSL.name("estado"), org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>public.tab_sol_transportista.fecha_ingreso</code>.
     */
    public final TableField<TabSolTransportistaRecord, LocalDateTime> FECHA_INGRESO = createField(DSL.name("fecha_ingreso"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_transportista.fecha_modifica</code>.
     */
    public final TableField<TabSolTransportistaRecord, LocalDateTime> FECHA_MODIFICA = createField(DSL.name("fecha_modifica"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.tab_sol_transportista.usuario_ingreso</code>.
     */
    public final TableField<TabSolTransportistaRecord, Integer> USUARIO_INGRESO = createField(DSL.name("usuario_ingreso"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_transportista.usuario_modifica</code>.
     */
    public final TableField<TabSolTransportistaRecord, Integer> USUARIO_MODIFICA = createField(DSL.name("usuario_modifica"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tab_sol_transportista.id_solicitud</code>.
     */
    public final TableField<TabSolTransportistaRecord, Long> ID_SOLICITUD = createField(DSL.name("id_solicitud"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.tab_sol_transportista.id_sol_productor</code>.
     */
    public final TableField<TabSolTransportistaRecord, Long> ID_SOL_PRODUCTOR = createField(DSL.name("id_sol_productor"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.tab_sol_transportista</code> table reference
     */
    public TabSolTransportista() {
        this(DSL.name("tab_sol_transportista"), null);
    }

    /**
     * Create an aliased <code>public.tab_sol_transportista</code> table reference
     */
    public TabSolTransportista(String alias) {
        this(DSL.name(alias), TAB_SOL_TRANSPORTISTA);
    }

    /**
     * Create an aliased <code>public.tab_sol_transportista</code> table reference
     */
    public TabSolTransportista(Name alias) {
        this(alias, TAB_SOL_TRANSPORTISTA);
    }

    private TabSolTransportista(Name alias, Table<TabSolTransportistaRecord> aliased) {
        this(alias, aliased, null);
    }

    private TabSolTransportista(Name alias, Table<TabSolTransportistaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TabSolTransportista(Table<O> child, ForeignKey<O, TabSolTransportistaRecord> key) {
        super(child, key, TAB_SOL_TRANSPORTISTA);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TAB_SOL_TRANSPORTISTA_PKEY);
    }

    @Override
    public UniqueKey<TabSolTransportistaRecord> getPrimaryKey() {
        return Keys.TAB_SOL_TRANSPORTISTA_PKEY;
    }

    @Override
    public List<UniqueKey<TabSolTransportistaRecord>> getKeys() {
        return Arrays.<UniqueKey<TabSolTransportistaRecord>>asList(Keys.TAB_SOL_TRANSPORTISTA_PKEY);
    }

    @Override
    public List<ForeignKey<TabSolTransportistaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TabSolTransportistaRecord, ?>>asList(Keys.TAB_SOL_TRANSPORTISTA__TAB_SOL_TRANSPORTISTA_USUARIO_INGRESO_FKEY, Keys.TAB_SOL_TRANSPORTISTA__TAB_SOL_TRANSPORTISTA_USUARIO_MODIFICA_FKEY);
    }

    public TabUsuario tabSolTransportista_TabSolTransportistaUsuarioIngresoFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_TRANSPORTISTA__TAB_SOL_TRANSPORTISTA_USUARIO_INGRESO_FKEY);
    }

    public TabUsuario tabSolTransportista_TabSolTransportistaUsuarioModificaFkey() {
        return new TabUsuario(this, Keys.TAB_SOL_TRANSPORTISTA__TAB_SOL_TRANSPORTISTA_USUARIO_MODIFICA_FKEY);
    }

    @Override
    public TabSolTransportista as(String alias) {
        return new TabSolTransportista(DSL.name(alias), this);
    }

    @Override
    public TabSolTransportista as(Name alias) {
        return new TabSolTransportista(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolTransportista rename(String name) {
        return new TabSolTransportista(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TabSolTransportista rename(Name name) {
        return new TabSolTransportista(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, String, String, String, String, String, String, String, String, String, LocalDateTime, LocalDateTime, Integer, Integer, Long, Long> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
